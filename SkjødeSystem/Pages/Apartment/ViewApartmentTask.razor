@page "/viewapartmenttask/{apartmentId}/{address}"
@inject NavigationManager NavigationManager
@inject HttpClient Http

<head>
    <link href="css/viewapartmenttask.css" rel="stylesheet" />
</head>


<h1>Opgaveliste for Lejlighed</h1>

@if (tasks == null || !tasks.Any())
{
    <p>Ingen opgaver fundet for denne lejlighed.</p>
}
else
{
    <table class="content-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Navn</th>
                <th>Status</th>
                <th>Udføres af</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in tasks)
            {
                <tr>
                    <td>@task.TaskId</td>
                    <td>@task.TaskName</td>
                    <td>@task.Status</td>
                    <td>@task.AssignedTo?.SubcontractorName</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public string apartmentId { get; set; }

    [Parameter]
    public string address { get; set; }

    private List<TaskItem> tasks = new List<TaskItem>();

    protected override async Task OnInitializedAsync()
    {
       
            // Hent opgaver for den valgte lejlighed
            tasks = await Http.GetFromJsonAsync<List<TaskItem>>($"https://localhost:7210/api/Task/GetTaskByApartmentId{apartmentId}");

            if (tasks == null || !tasks.Any())
            {
                Console.WriteLine($"No tasks found for Apartment ID: {apartmentId}");
            }
    }
}
       
