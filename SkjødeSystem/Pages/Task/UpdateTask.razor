@page "/updatetask/{TaskId}"
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject ITaskService TaskService
@inject IApartmentService ApartmentService
@inject IUserService UserService

<PageTitle>CreateTask</PageTitle>

<EditForm Model="@task" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="shadow overflow-hidden sm:rounded-md bg-white dark:bg-black">


        <div class="grid grid-cols-6 gap-6">
            <div class="relative px-4 py-5 sm:p-6">
                <h3>Se Opgavedetaljer:</h3>

                <div class="col-span-6 sm:col-span-3">
                    <label for="taskName">Opgave Navn:</label>
                    <InputText id="taskName" class="form-control" @bind-Value="task.TaskName" readonly />
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label for="description">Beskrivelse:</label>
                    <textarea id="description" class="form-control" @bind="task.Description" placeholder="Beskrivelse" readonly> </textarea>
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label for="address">Addresse:</label>
                    <InputText id="address" class="form-control" @bind-Value="task.AssignedApartment.Address" readonly />
                </div>

                @* <div class="col-span-6 sm:col-span-3">
                <label for="ToDo">Tilføj Mangelliste:</label>
                <InputFile id="ToDo" class="form-control" @bind-Value="task.ToDoPDF" />
                </div> *@

                <div class="col-span-6 sm:col-span-3">
                    <label for="startDate">Start Dato:</label>
                    <InputDate id="startDate" class="form-control" @bind-Value="task.StartDate" readonly />
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label for="status">Status:</label>
                    <InputSelect id="status" class="form-control" @bind-Value="task.Status">
                        @foreach (var status in Statuses)
                        {
                            <option value="@status">@status</option>
                        }
                    </InputSelect>

                    <div class="col-span-6 sm:col-span-3">
                        <label for="comment">Kommentar:</label>
                        <textarea id="comment" class="form-control" @bind="task.Comment" placeholder="Tilføj en kommentar"> </textarea>
                    </div>

                    <div class="mt-4 px-4 py-3 bg-gray-50 dark:bg-gray-900 text-right sm:px-6">
                        <div class="flex justify-between items-center">
                            <button type="submit" class="btn btn-primary">Gem Ændringer</button>
                        </div>
                    </div>

                    @if (isSuccess)
                    {
                        <div class="alert alert-success mt-3">
                            Opgaven blev ændret succesfuldt!
                        </div>
                    }

                    @if (isError)
                    {
                        <div class="alert alert-danger mt-3">
                            Der opstod en fejl under ændring af Opgaven.
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>

</EditForm>

@code {

    private List<string> Statuses = new() { "Afventer", "Igangværende", "Færdiggjort", };
    private TaskItem task = new TaskItem
    {
            AssignedApartment = new Apartment(),
    };
    private bool isSuccess = false;
    private bool isError = false;
  

    protected override async Task OnInitializedAsync()
    {
        task = await TaskService.GetTaskById(TaskId);
    }

    private async Task HandleValidSubmit()
    {
        task.ActualEndDate = DateTime.Now; 

        // Make HTTP Update for at opdatere task objektet
        var response = await TaskService.UpdateTask(TaskId, task);

        if (response.IsSuccessStatusCode)
        {
            isSuccess = true;
            isError = false;
        }
        else
        {
            isSuccess = false;
            isError = true;
        }

        var errorDetails = await response.Content.ReadAsStringAsync();
        Console.WriteLine($"Error: {errorDetails}");
    }




    [Parameter]
    public string TaskId { get; set; } //Parameter modtaget som streng fra ViewTask
}
