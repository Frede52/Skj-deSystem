@page "/createtask/{ApartmentId:int}"
@inject NavigationManager NavigationManager
@inject HttpClient Http

<PageTitle>CreateTask</PageTitle>

<EditForm Model="@task" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

<div class="shadow overflow-hidden sm:rounded-md bg-white dark:bg-black">


 <div class="grid grid-cols-6 gap-6">
  <div class="relative px-4 py-5 sm:p-6">
   <h3>Ny Opgave:</h3>

    <div class="col-span-6 sm:col-span-3">
        <label for="taskName">Opgave Navn:</label>
        <InputText id="taskName" class="form-control" @bind-Value="task.TaskName" placeholder="Navn på opgaven" />
    </div>

    <div class="col-span-6 sm:col-span-3">
        <label for="description">Beskrivelse:</label>
        <textarea id="description" class="form-control" @bind="task.Description" placeholder="Tilføj en beskrivelse til opgaven"> </textarea>
    </div>
    
    @* <div class="col-span-6 sm:col-span-3">
        <label for="ToDo">Tilføj Mangelliste:</label>
        <InputFile id="ToDo" class="form-control" @bind-Value="task.ToDoPDF" />
    </div> *@

    <div class="col-span-6 sm:col-span-3">
        <label for="startDate">Start Dato:</label>
        <InputDate id="startDate" class="form-control" @bind-Value="task.StartDate" TValue="DateOnly" />
    </div> 

     <div class="col-span-6 sm:col-span-3">
        <label for="status">Status:</label>
        <InputSelect id="status" class="form-control" @bind-Value="task.Status">
            @foreach (var status in Statuses)
            {
                <option value="@status">@status</option>
            }
        </InputSelect>

    <div class="col-span-6 sm:col-span-3">
         <label for="status">Udføres af:</label>
            <InputSelect id="" class="form-control" @bind-Value="selectedSubcontractorId">
               @foreach (var subconctractor in subcontractors)
               {
                  <option value="@subconctractor.UserId">@subconctractor.SubcontractorName</option>
               }
           </InputSelect>
    </div> 


@* 
    <div class="col-span-6 sm:col-span-3">
         <label for="address">Adresse:</label>
         <InputText id="address" class="form-control" @bind-Value="apartment.Address" readonly />
    </div>  *@

     <div class="col-span-6 sm:col-span-3">
          <label for="comment">Kommentar:</label>
          <InputText id="comment" class="form-control" @bind-Value="task.Comment" placeholder="Kommentar fra UE" readonly />
     </div>

     <div class="mt-4 px-4 py-3 bg-gray-50 dark:bg-gray-900 text-right sm:px-6">
        <div class="flex justify-between items-center">
        <button type="submit" class="btn btn-primary">Gem Opgave</button>
        </div>
     </div>
        
     @if (showSuccessMessage)
        {
         <div class="alert alert-success mt-3">
             Listing added successfully!
         </div>
         }

  </div>
 </div>
</div>
</div>

</EditForm>

@code {

    private List<string> Statuses = new() { "Afventer", "Igangværende", "Færdiggjort", };
    private TaskItem task = new TaskItem
        {
            Subcontractor = new Subcontractor() 
        };
    private List<Subcontractor> subcontractors = new List<Subcontractor>();
    private bool showSuccessMessage = false;
    private Apartment apartment;
    private int selectedSubcontractorId;


    protected override async Task OnInitializedAsync()
    {
        // Henter list af subcontractors.
        subcontractors = await Http.GetFromJsonAsync<List<Subcontractor>>("https://localhost:7210/api/User/GetSubcontractors");

        // Hvis der allerede er en valgt subcontractor
        if (task.Subcontractor != null)
        {
            selectedSubcontractorId = task.Subcontractor.UserId;
        }

    }

    private void HandleSubcontractorSelection()
    {
        task.Subcontractor = subcontractors.FirstOrDefault(s => s.UserId == selectedSubcontractorId);
    }


    private async Task HandleValidSubmit()
    {
        
        // Make HTTP POST request to save the listing
        var response = await Http.PostAsJsonAsync("https://localhost:7210/api/Task/AddTask", task);

        if (response.IsSuccessStatusCode)
        {
            showSuccessMessage = true;
            await Task.Delay(4000);
            showSuccessMessage = false;

        }
        else
        {
            // Error message
            Console.WriteLine("Error adding listing.");
        }
    }

    [Parameter]
    public int ApartmentId { get; set; }
}
