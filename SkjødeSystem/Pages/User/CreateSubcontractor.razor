@page "/addsubcontractor"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations
@using MongoDB.Bson

<PageTitle>Add Subcontractor</PageTitle>

<EditForm Model="@subcontractor" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <h3>Opret bruger til ny Underentreprenør :</h3>

    <div class="form-group">
        <label for="userName">Brugernavn:</label>
        <InputText id="userName" class="form-control" @bind-Value="subcontractor.UserName" />
    </div>

    <div class="form-group">
        <label for="password">Adgangskode:</label>
        <InputText id="password" type="form-control" class="form-control" @bind-Value="subcontractor.Password" />
    </div>

    <div class="form-group">
        <label for="phone">Tlf:</label>
        <InputText id="phone" class="form-control" @bind-Value="subcontractor.Phone" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" type="form-control" class="form-control" @bind-Value="subcontractor.Email" />
    </div>

    <div class="form-group">
        <label for="status">Rolle:</label>
        <InputText id="role" class="form-control" @bind-Value="subcontractor.Role" ActiveRole>
          
        </InputText>
    </div>
    <div class="form-group">
        <label for="role">Navn på Underentreprenør:</label>
        <InputText id="Navn" class="form-control" @bind-Value="subcontractor.SubcontractorName" />
    </div>

    <button type="submit" class="btn btn-primary">Opret Bruger</button>
</EditForm>

@if (isSuccess)
{
    <div class="alert alert-success mt-3">
        Subcontractor added successfully!
    </div>
}

@if (isError)
{
    <div class="alert alert-danger mt-3">
        An error occurred while adding the subcontractor.
    </div>
}

@code {
    private Subcontractor subcontractor = new Subcontractor();
    private bool isSuccess = false;
    private bool isError = false;
    private string ActiveRole = "Subcontractor";

    private async System.Threading.Tasks.Task HandleValidSubmit()
    {

        subcontractor.UserId = ObjectId.GenerateNewId().ToString();
        try
        {
            // Send Subcontractor objektet til API'et, som opretter det i databasen
            var response = await Http.PostAsJsonAsync("https://localhost:7210/api/User/AddSubcontractor", subcontractor);

            if (response.IsSuccessStatusCode)
            {
                isSuccess = true;
                isError = false;
                subcontractor = new Subcontractor(); // Reset formularen
            }
            else
            {
                isSuccess = false;
                isError = true;
            }
            var errorDetails = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Error: {errorDetails}");
        }
        catch (Exception)
        {
            isSuccess = false;
            isError = true;
        }
    }
}
